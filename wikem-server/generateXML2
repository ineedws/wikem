#!/usr/bin/env ruby


# ENV['RAILS_ENV'] ||= 'development'
# require File.dirname(__FILE__) + '/../config/environment'
require 'digest/md5'
require 'csv'
require 'ftools'
require 'mediawiki-gateway/lib/media_wiki'

curr_time = Time.now
RAILS_ROOT = File.dirname(__FILE__)

class Page
  attr_accessor :name, :folder, :content, :last_update, :author_name
  
end

current_stamp = Time.now.to_i

mw = MediaWiki::Gateway.new('http://www.wikem.org/w/api.php')
mw.login('robot','wikem-vona')

# replace internal links (old url => new url) in given content field
def replace_redirect_urls(content, redirects)
	# parse all internal urls from content field 
	replace_urls = {}
	page_urls = content.scan(/\/wiki\/[a-z0-9:\-\'\/\._()]+/ix)
	page_urls.each do |url|
		url.gsub!('/wiki/', '')	
		replace_urls[url] = redirects[url] if redirects.key?(url)
	end	
	# replace those urls to new ones
	replace_urls.each do |old_url, new_url|
		content.gsub!("/wiki/#{old_url}", "/wiki/#{new_url}")
	end
	content
	
	# or we can just use next code instead all above
	#redirects.each do |old_url, new_url|
	#	content.gsub!("/wiki/#{old_url}", "/wiki/#{new_url}")
	#end
	#content
end


# get all redirects
redirects = mw.list_redirects_with_targets

page = Page.new
page.content = mw.render("Drug levels")

page.content = replace_redirect_urls(page.content, redirects)
puts page.content